#include <fcntl.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdnoreturn.h>
#include <sys/types.h>
#include <unistd.h>

#define SIZE 4096

#define CHK(op)                                                                \
    do {                                                                       \
        if ((op) == -1)                                                        \
            raler (1, #op);                                                    \
    } while (0)

noreturn void raler (int syserr, const char *msg, ...)
{
    va_list ap;

    va_start (ap, msg);
    vfprintf (stderr, msg, ap);
    fprintf (stderr, "\n");
    va_end (ap);

    if (syserr == 1)
        perror ("");

    exit (EXIT_FAILURE);
}
void affiche_contenu (char *filename)
{
    int fd = open (filename, O_RDONLY);
    CHK (fd);

    char buffer [SIZE];
    ssize_t bytes_read;

    while ((bytes_read = read (fd, buffer, SIZE)) > 0) {
        printf ("%s", buffer);
    }
    CHK (bytes_read);
    CHK (close (fd));
}

int main (int argc, char *argv [])
{
    if (argc != 2) {
        raler (0, "Nombre d'arguments...\n");
    }
    char *filename = argv [1];
    affiche_contenu (filename);

    return 0;
}